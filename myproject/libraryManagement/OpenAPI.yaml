openapi: 3.0.0
info:
  title: Library Management API (v1)
  description: >
    REST API cho hệ thống quản lý thư viện — phiên bản v1  
    Bao gồm quản lý người dùng, sách, mượn/trả sách, xác thực JWT, và khởi tạo database.
  version: 1.0.0

servers:
  - url: http://127.0.0.1:5000/api/v1
    description: Local development server

tags:
  - name: Auths
    description: Các API xác thực (JWT)
  - name: Users
    description: Quản lý người dùng
  - name: Books
    description: Quản lý sách
  - name: Loans
    description: Quản lý lượt mượn/trả
  - name: System
    description: Khởi tạo hệ thống

paths:
  /:
    get:
      tags: [System]
      summary: Kiểm tra trạng thái server
      responses:
        200:
          description: Trả về "Hello, World!"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Hello, World!

  /init-db:
    post:
      tags: [System]
      summary: Khởi tạo lại cơ sở dữ liệu
      description: Dùng để tạo bảng và dữ liệu mẫu ban đầu.
      responses:
        200:
          description: Database initialized successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Database initialized successfully.

  /auths:
    post:
      tags: [Auths]
      summary: Đăng nhập
      description: Đăng nhập bằng username và password để nhận JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: cuong
                password:
                  type: string
                  example: 123456
      responses:
        200:
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        401:
          description: Sai username hoặc password

  /users:
    get:
      tags: [Users]
      summary: Lấy danh sách người dùng (có tìm kiếm & phân trang)
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          description: Từ khóa tìm kiếm theo tên hoặc username
          required: false
          schema:
            type: string
            example: cuong
        - name: page
          in: query
          description: Số trang (bắt đầu từ 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Số bản ghi mỗi trang
          required: false
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Danh sách người dùng có phân trang
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 42
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

    post:
      tags: [Users]
      summary: Tạo người dùng mới
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        201:
          description: Người dùng được tạo thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /books:
    get:
      tags: [Books]
      summary: Lấy danh sách tất cả sách (có tìm kiếm & phân trang)
      parameters:
        - name: search
          in: query
          description: Từ khóa tìm kiếm theo tiêu đề hoặc tác giả
          required: false
          schema:
            type: string
            example: harry
        - name: page
          in: query
          description: Số trang (bắt đầu từ 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Số bản ghi mỗi trang
          required: false
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Danh sách sách có phân trang
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 120
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'

    post:
      tags: [Books]
      summary: Thêm sách mới
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        201:
          description: Sách được thêm thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

  /books/{id}:
    get:
      tags: [Books]
      summary: Lấy thông tin sách theo ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Thông tin sách
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        404:
          description: Không tìm thấy sách

    put:
      tags: [Books]
      summary: Cập nhật thông tin sách
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        200:
          description: Cập nhật thành công

    delete:
      tags: [Books]
      summary: Xóa sách
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Xóa thành công

  /loans:
    get:
      tags: [Loans]
      summary: Lấy danh sách lượt mượn (có tìm kiếm & phân trang)
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          description: Tìm kiếm theo tên người dùng hoặc tiêu đề sách
          required: false
          schema:
            type: string
            example: cuong
        - name: page
          in: query
          description: Số trang (bắt đầu từ 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Số bản ghi mỗi trang
          required: false
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Danh sách lượt mượn có phân trang
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 15
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Loan'

    post:
      tags: [Loans]
      summary: Mượn sách mới
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                book_id:
                  type: integer
                  example: 2
      responses:
        201:
          description: Tạo lượt mượn thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'

  /loans/{id}/return:
    patch:
      tags: [Loans]
      summary: Trả sách
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Trả sách thành công
        404:
          description: Không tìm thấy lượt mượn

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time

    UserCreate:
      type: object
      required: [username, password, name]
      properties:
        username:
          type: string
          example: cuong
        password:
          type: string
          example: 123456
        name:
          type: string
          example: cuong

    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        available:
          type: boolean

    BookCreate:
      type: object
      required: [title, author]
      properties:
        title:
          type: string
          example: Harry Potter
        author:
          type: string
          example: J. K. Rowling

    Loan:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        book_id:
          type: integer
        borrow_date:
          type: string
          format: date-time
        return_date:
          type: string
          format: date-time
          nullable: true
